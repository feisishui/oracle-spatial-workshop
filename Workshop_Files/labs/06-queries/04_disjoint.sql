-- True DISJOINT: returns wrong resultsSELECT c.city, c.state_abrv  FROM us_states s, us_cities c WHERE sdo_relate(c.location,s.geom, 'mask=disjoint') = 'TRUE'   AND s.state_abrv='CA';-- This fails-- ORA-13207: incorrect use of the [SDO_ANYINTERACT] operatorSELECT c.city, c.state_abrv, c.location  FROM us_states s, us_cities c WHERE sdo_anyinteract(c.location,s.geom) = 'FALSE'   AND s.state_abrv='CA';-- Possible but inefficientSELECT c.city, c.state_abrv, c.location  FROM us_states s, us_cities c WHERE sdo_anyinteract(c.location,s.geom) <> 'TRUE'   AND s.state_abrv='CA';-- Possible but inefficientSELECT c.city, c.state_abrv, c.location  FROM us_states s, us_cities c WHERE not (sdo_anyinteract(c.location,s.geom) = 'TRUE')   AND s.state_abrv='CA';-- Possible but does not allow fetching the geometriesSELECT c.city, c.state_abrv, c.location  FROM us_cities cMINUSSELECT c.city, c.state_abrv, c.location  FROM us_states s, us_cities c WHERE sdo_anyinteract(c.location,s.geom) = 'TRUE'   AND s.state_abrv='CA';SELECT c.city, c.state_abrv  FROM us_cities cMINUSSELECT c.city, c.state_abrv  FROM us_states s, us_cities c WHERE sdo_anyinteract(c.location,s.geom) = 'TRUE'   AND s.state_abrv='CA';-- Best technique if returning geometriesSELECT c.city, c.state_abrv, c.location  FROM us_cities c WHERE ROWID NOT IN (  SELECT c.rowid    FROM us_states s, us_cities c   WHERE sdo_anyinteract(c.location,s.geom) = 'TRUE'     AND s.state_abrv='CA' );
